import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: "com.github.ManifestClasspath"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

configurations {
    implementation.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
}

dependencies {
    implementation(
            "org.springframework.boot:spring-boot-starter-jetty:$springBootVersion",
            "org.springframework.boot:spring-boot-starter-security:$springBootVersion",
            "org.springframework.boot:spring-boot-starter-logging:$springBootVersion",
            "org.springframework.boot:spring-boot-starter-jdbc:$springBootVersion",

            "org.zkoss.zkspringboot:zkspringboot-starter:$zkSpringBootVersion",

            "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion",
            "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion",
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    )
}

resourcesFiltering = {
    ['**/*application.yml'].each {
        filesMatching(it) {
            filter ReplaceTokens, tokens: [
                    "dbPassword"   : dbPassword,
                    "dbUsername"   : dbUsername,
                    "dbUrl"        : dbUrl
            ]
        }
    }
}

processResources resourcesFiltering
processTestResources resourcesFiltering

bootRun {
    dependsOn(generateRebel)
    systemProperties = System.properties
    if (agentPath?.trim()) {
        jvmArgs += "-agentpath:$agentPath"
    }
    /*if (project.hasProperty('args')) {
        args project.args.split(',')
    }*/
}

springBoot {
    mainClassName = "ru.cash.web.CashWebAppKt"
}